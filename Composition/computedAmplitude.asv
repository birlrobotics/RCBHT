%%********************** Documentation ************************************
% Used to compute the amplitude between composites composed of two
% primitives, where the first primitive could be pos/neg/constant/impulse
% and the second one can also be pos/net/constant/impulse. 
% 
% Find the maximum distance between the two extremes. ]
% 
% Input Parameters: 
% p1type:   - string. the type of the 1st primitive pos/neg/const/impulse.
% p2type:   - string. the type of the 2nd primitive pos/neg/const/impulse.
% p1maxmin: - [p1max p1min], 1x2 vec that holds max and min vals
% p2maxmin: - [p1max p1min], 1x2 vec that holds max and min vals
%
% Output Parameters:
% amplitude: maximum distance between two primitives. 
%**************************************************************************
function amplitude=computedAmplitude(p1type,p2type,p1maxmin,p2maxmin)

%% Positive p1
    % Pos,Neg
    if(strcmp(p1type,'pos') && strcmp(p2type,'neg'))
        
        % Retrieve p1max,p2min
        p1 = p1maxmin(1,1); p2 = p2maxmin(1,2);
        
        %% Compute amplitude depending on signs
        % If both positive or negative:
        if(p1>0 && p2>=0 || p1<0 && p2<0)
            
            % Compute the absolute values
            p1=abs(p1); p2=abs(p2);
            amplitude = p1 - p2;
        
        % p1=pos,p2=neg or 
        else
            amplitude = p1-p2;
        end
        
    % Pos,pos
    elseif(strcmp(p1type,'pos') && strcmp(p2type,'pos'))
        
        % Retrieve p1min,p2max
        p1 = p1maxmin(1,2); p2 = p2maxmin(1,1);
        
        %% Compute amplitude depending on signs
        % If both positive or negative:
        if(p1>0 && p2>=0 || p1<0 && p2<0)
            
            % Compute the absolute values
            p1=abs(p1); p2=abs(p2);
            amplitude = p2-p1;
        
        % p1=neg,p2=pos or 
        else
            amplitude = p2-p1;
        end        
    
    % pos,const
    elseif(strcmp(p1type,'pos') && strcmp(p2type,'const'))
        
        % Retrieve p1min,p2max
        p1 = p1maxmin(1,2); p2 = p2maxmin(1,1);
        
        %% Compute amplitude depending on signs
        % If both positive or negative:
        if(p1>0 && p2>=0 || p1<0 && p2<0)
            
            % Compute the absolute values
            p1=abs(p1); p2=abs(p2);
            amplitude = p2-p1;
        
        % p1=neg,p2=pos or 
        else
            amplitude = p2-p1;
        end

    % pos,impulse
    elseif(strcmp(p1type,'pos') && strcmp(p2type,'impulse'))
        
        % Retrieve p1min,p2max
        p1 = p1maxmin(1,2); p2 = p2maxmin(1,1);
        
        %% Compute amplitude depending on signs
        % If both positive or negative:
        if(p1>0 && p2>=0 || p1<0 && p2<0)
            
            % Compute the absolute values
            p1=abs(p1); p2=abs(p2);
            amplitude = p2-p1;
        
        % p1=neg,p2=pos or 
        else
            amplitude = p2-p1;
        end        
            
    else
        amplitude = 0;
    end   
    
%% Negative p1
    
    % neg,pos
    if(strcmp(p1type,'neg') && strcmp(p2type,'pos'))
        
        % Retrieve p1min,p2max
        p1 = p1maxmin(1,2); p2 = p2maxmin(1,1);
        
        %% Compute amplitude depending on signs
        % If both positive or negative:
        if(p1>0 && p2>=0)            
            amplitude = p2-p1;
        
        % If both negative
        elseif(p1<0 && p2<0)
            % Compute the absolute values
            p1=abs(p1); p2=abs(p2);
            amplitude = p1-p2;
            
        % p1=neg,p2=pos or 
        else
            amplitude = p2-p1;
        end        
            
    % Neg,neg
    elseif(strcmp(p1type,'neg') && strcmp(p2type,'neg'))
        
        % Retrieve p1max,p2min
        p1 = p1maxmin(1,1); p2 = p2maxmin(1,2);
        
        %% Compute amplitude depending on signs
        % If both positive or p1=pos,p2=neg:
        if(p1>0 && p2>=0 || p1>0 && p2<0)           
            amplitude = p1-p2;
        
        % If both neg 
        else
            amplitude = abs(p2)-abs(p1);
        end        
              
    % Neg,const
    elseif(strcmp(p1type,'neg') && strcmp(p2type,'const'))

        % Retrieve p1max,p2min
        p1 = p1maxmin(1,1); p2 = p2maxmin(1,2);
        
        %% Compute amplitude depending on signs
        % If both positive or p1=pos,p2=neg:
        if(p1>0 && p2>=0 || p1>0 && p2<0)           
            amplitude = p1-p2;
        
        % If both neg 
        else
            amplitude = abs(p2)-abs(p1);
        end 
        
    % Neg,impulse 
    elseif(strcmp(p1type,'neg') && strcmp(p2type,'impulse'))
    
    	% Negative impulse
        
        % Retrieve p1max,p2min
        p1 = p1maxmin(1,1); p2 = p2maxmin(1,2);
        
        %% Compute amplitude depending on signs
        % If both positive or p1=pos,p2=neg:
        if(p1>0 && p2>=0 || p1>0 && p2<0)           
            amplitude = p1-p2;
        
        % If both neg 
        else
            amplitude = abs(p2)-abs(p1);
        end         
        % Positive impulse
    else
        amplitude=0;        
    end


%% Constant p1
    if(strcmp(p1type,'const') && strcmp(p2type,'pos'))
        
    elseif(strcmp(p1type,'const') && strcmp(p2type,'neg'))

    else
        p1 = 0; p2 = 0;        
    end
%% Impulse p1
    if(strcmp(p1type,'impulse') && strcmp(p2type,'pos'))
        
    elseif(strcmp(p1type,'impulse') && strcmp(p2type,'neg'))

    else
        p1 = 0; p2 = 0;        
    end
end